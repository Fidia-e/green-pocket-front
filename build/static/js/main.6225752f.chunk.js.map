{"version":3,"sources":["components/MiniProfil/index.js","actions/loginActions.js","containers/MiniProfil.js","components/Feed/index.js","components/SectionLeft/index.js","components/LandingPage/index.js","components/Home/index.js","components/Nav/index.js","components/Calendar/index.js","components/Profil/index.js","containers/Profil.js","actions/profilActions.js","components/Garden/index.js","containers/Garden.js","actions/listPlantApiAction.js","actions/userPlantActions.js","actions/removePlantAction.js","components/SinglePlantUser/index.js","selectors/plantlist.js","containers/SinglePlantUser.js","components/SinglePlantApi/index.js","containers/SinglePlantApi.js","components/Catalog/index.js","containers/Catalog.js","actions/addPlantAction.js","components/Login/index.js","containers/Login.js","components/Loading/index.js","components/Register/index.js","containers/Register.js","containers/PlantUserFromApi.js","components/PrivateRoute/index.js","containers/PrivateRoute.js","components/App/index.js","containers/App.js","serviceWorker.js","reducers/loginReducer.js","reducers/plantListApi.js","reducers/plantUserReducer.js","reducers/profilReducer.js","reducers/index.js","middleware/ajaxMiddleware.js","middleware/loginMiddleware.js","store/index.js","index.js","assets/images/PocketLogo.png","assets/images/GreenPocketLogo.png","assets/images/Calendar.png"],"names":["MiniProfil","onLogout","firstName","lastName","className","type","onClick","to","loginSuccess","payload","connect","state","loginReducer","user","dispatch","Feed","placeholder","CardPost","SectionLeft","LandingPage","src","pocketLogo","alt","Home","NavBar","logo","exact","href","target","rel","Calendar","id","calendarLogo","Profil","currentUser","profilEdit","onEditInput","console","log","classActiveEdit","name","value","country","citycode","email","profilReducer","dispacth","Garden","listPlantUser","firstPage","previousPage","nextPage","lastPage","removePlant","nbPlant","map","plantUser","key","plantmodel","pseudoPlant","Description","slug","plantUserReducer","list","nbrResultUser","idPlant","SinglePlantUser","plant","category","family","Tasks","style","color","getPlantBySlug","slugPlant","find","withRouter","ownProps","match","params","SinglePlantApi","picture","upKeep","needWater","growth","multiplication","frostResistance","density","exposure","plantationType","foliage","groundType","groundPh","groundHumidity","plantUsers","plantUObj","pseudoUser","plantListApi","Catalog","currentPage","onButtonSubmit","addPlantInputChange","addIdPlant","messageAddPlant","plantObj","onSubmit","e","preventDefault","onChange","newPseudoPlant","event","numberPage","nbrResultAPI","pseudoAddPlant","txtAddPlant","Login","formDataLog","changeInput","onLoginSubmit","isLogged","messageLog","history","useHistory","handleInputChange","evt","useEffect","push","password","defaultProps","txtUserLog","Loading","height","width","timeout","Register","formData","onInputRegisterChange","onFormRegisterSubmit","pseudo","dateofbirth","txtNewUser","enteredText","PrivateRoute","children","rest","render","App","checkAuth","loadDataApi","loading","loadPlantUser","path","Nav","PlantUserFromApi","error","Boolean","window","location","hostname","initialState","token","action","localStorage","getItem","removeItem","firstname","lastname","errorMessage","totalPage","idPlantCreate","data","info","nbPage","handleBackPage","handleNextPage","handleFirstPage","handleLastPage","page","currentPlant","combineReducers","baseURI","enhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","next","axios","method","url","withCredentials","username","getState","then","res","setItem","catch","err","finally","headers","Authorization","userData","nbrPage","nbPlantPage","newIdPlant","plantModel","setTimeout","createStore","rootReducer","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.6225752f.chunk.js","sourcesContent":["// Import\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { User } from 'react-feather';\nimport Proptypes from 'prop-types';\n\n// Local Import\nimport './style.scss';\n\nconst MiniProfil = ({ onLogout, firstName, lastName }) => (\n  <div className=\"profil\">\n    <div className=\"profil--header\">\n      <User className=\"profil--icon\" />\n      <div className=\"profil--user\">\n        <div className=\"profil--name\">\n          <p>\n            {firstName} {lastName}\n          </p>\n        </div>\n        <div className=\"profil--title\">\n          <p>Gardener</p>\n        </div>\n      </div>\n    </div>\n    <div className=\"profil--content\">\n      <p>Ma localisation</p>\n      <p>Amis jardiniers : 123</p>\n      <p>Plantes : 52</p>\n      <p>Tâches en cours : 3</p>\n    </div>\n    <div className=\"profil--button\">\n      <button\n        type=\"button\"\n        className=\"deconnexion--button\"\n        onClick={onLogout}\n      >\n        Déconnexion\n      </button>\n      <Link to=\"/profil\" className=\"link--button\">\n        <button\n          type=\"button\"\n          className=\"myProfil--button\"\n        >\n          Mon profil\n        </button>\n      </Link>\n    </div>\n  </div>\n);\n\nMiniProfil.propTypes = {\n  onLogout: Proptypes.func.isRequired,\n  firstName: Proptypes.string.isRequired,\n  lastName: Proptypes.string.isRequired,\n};\n\nexport default MiniProfil;\n","// Import : Name actions\nexport const LOGIN_INPUT_CHANGE = 'LOGIN_INPUT_CHANGE';\nexport const LOGIN_SUBMIT = 'LOGIN_SUBMIT';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERREOR';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const CHECK_AUTH = 'CHECK_AUTH';\nexport const REGISTER_FORM_SUBMIT = 'REGISTER_FORM_SUBMIT';\nexport const REGISTER_INPUT_CHANGE = 'REGISTER_INPUT_CHANGE';\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\nexport const ADD_USER_ERR = 'ADD_USER_ERR';\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER';\nexport const SET_LOADING_STATE = 'SET_LOADING_STATE';\n\n// Import : Function action\nexport const changeInput = (payload) => ({\n  type: LOGIN_INPUT_CHANGE,\n  payload,\n});\n\nexport const loginSubmit = () => ({\n  type: LOGIN_SUBMIT,\n});\n\nexport const loginSuccess = (payload) => ({\n  type: LOGIN_SUCCESS,\n  payload,\n});\n\nexport const loginError = () => ({\n  type: LOGIN_ERROR,\n});\n\nexport const logoutSuccess = (payload) => ({\n  type: LOGOUT_SUCCESS,\n  payload,\n});\n\nexport const checkAuth = () => ({\n  type: CHECK_AUTH,\n});\n\nexport const registerInputChange = (payload) => ({\n  type: REGISTER_INPUT_CHANGE,\n  payload,\n});\n\nexport const registerFormSubmit = () => ({\n  type: REGISTER_FORM_SUBMIT,\n});\n\nexport const addUserSuccess = () => ({\n  type: ADD_USER_SUCCESS,\n});\n\nexport const addUserErr = () => ({\n  type: ADD_USER_ERR,\n});\n\nexport const getCurrentUser = (payload) => ({\n  type: GET_CURRENT_USER,\n  payload,\n});\n\nexport const setLoadingState = (loading) => ({\n  type: SET_LOADING_STATE,\n  loading,\n});\n","import { connect } from 'react-redux';\nimport MiniProfil from '../components/MiniProfil';\nimport { logoutSuccess } from '../actions/loginActions';\n\nconst mapState = (state) => ({\n  firstName: state.loginReducer.user.firstName,\n  lastName: state.loginReducer.user.lastName,\n});\n\nconst mapDispatch = (dispatch) => ({\n  onLogout: () => {\n    dispatch(logoutSuccess());\n  },\n});\n\nexport default connect(mapState, mapDispatch)(MiniProfil);\n","// Import\nimport React from 'react';\nimport { Share, MessageCircle, Heart } from 'react-feather';\n\n// Local Import\nimport './style.scss';\n\nconst Feed = () => (\n  <div className=\"feed\">\n    <div className=\"feed--content\">\n      <div className=\"content--top\">\n        <h3> Fil d'actualité </h3>\n      </div>\n      <div className=\"content--middle\">\n        <div className=\"list--posts\">\n          <CardPost />\n          <CardPost />\n          <CardPost />\n          <CardPost />\n          <CardPost />\n          <CardPost />\n          <CardPost />\n          <CardPost />\n          <CardPost />\n          <CardPost />\n          <CardPost />\n          <CardPost />\n          <CardPost />\n          <CardPost />\n          <CardPost />\n          <CardPost />\n        </div>\n      </div>\n      <div className=\"content--bottom\">\n        <div className=\"message\">\n          <input className=\"message--input\" type=\"text\" placeholder=\"message...\" />\n          <button className=\"message--button\" type=\"button\">Envoyer</button>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Feed;\n\n// Component \"CardPost\" for dynamisation :\nconst CardPost = () => (\n  <div className=\"cardPost\">\n    <h4>Pseudo du user</h4>\n    <p>Je vous post mon super cactus fraichement planté ce matin! Il est trop cool et il s'appelle Fidia! yeah!</p>\n    <p> Toryeu que c'est cheap cette esti de cochonnerie-là. Je crisse mon camp d'icite anyway, je déguedine au plus sacrant, ça sent la cibole de marde.</p>\n    <div className=\"cardPost--buttons\">\n      <button\n        className=\"comment hover\"\n        type=\"button\"\n      >\n        <MessageCircle className=\"button--icon--comment\" />\n      </button>\n      <button\n        className=\"like hover\"\n        type=\"button\"\n      >\n        <Heart className=\"button--icon--like\" />\n      </button>\n      <button\n        className=\"share hover\"\n        type=\"button\"\n      >\n        <Share className=\"button--icon--share\" />\n      </button>\n    </div>\n  </div>\n);\n","// Import\nimport React from 'react';\n\n// Import Local\nimport MiniProfil from '../../containers/MiniProfil';\nimport Feed from '../Feed';\nimport '../App/style.scss';\nimport './style.scss';\n\nconst SectionLeft = () => (\n  <div className=\"section-left\">\n    <MiniProfil />\n    <Feed />\n  </div>\n);\n\nexport default SectionLeft;\n","/* eslint-disable max-len */\n// Import\nimport React from 'react';\n\n// Import Local\nimport './style.scss';\nimport pocketLogo from '../../assets/images/GreenPocketLogo.png';\n\n// Component LandingPage =>\nconst LandingPage = () => (\n  <div className=\"landingPage\">\n    <div className=\"landingPage--description\">\n      <img src={pocketLogo} alt=\"pocketLogo\" className=\"landingPage-logo\" />\n      <h2>Bienvenue sur Green-Pocket</h2>\n      <p>Veuillez vous connecter pour avoir accès au site.</p>\n      <p>Ici, vous pourrez faire vivre votre passion des plantes et du jardinage, organiser vos plantes préférées, et les partager à votre communauté.</p>\n      <p>Amusez vous bien !</p>\n    </div>\n  </div>\n);\nexport default LandingPage;\n","import React from 'react';\n\n// Import Local\nimport pocketLogo from '../../assets/images/PocketLogo.png';\nimport '../App/style.scss';\nimport './style.scss';\n\n// Component LandingPage =>\nconst Home = () => (\n  <div className=\"section-right\">\n    <div className=\"home\">\n      <div className=\"home--content\">\n\n        <div className=\"home--logo\">\n          <img src={pocketLogo} alt=\"pocketLogo\" />\n        </div>\n\n        <div className=\"home--text\">\n          <h2 className=\"home--title\">Bienvenue sur ton nouvel espace de jardin privé et en ligne!</h2>\n          <p className=\"title_list\">Ici, tu peux jardiner tranquillement depuis ton ordinateur et faire toutes ces choses : </p>\n          <ul>\n            <li>- Consulter un catalogue de plantes fournis qui parmis elles, beaucoup de plantes connues!</li>\n            <li>- Accéder à ton espace personnel de gestion de tes plantes.</li>\n            <li>- Créer tes propres fiches plante et gérer une organisation</li>\n            <li>- Partager vos plantes a votre communautée et accès aux leurs!</li>\n          </ul>\n          <h3>Amuse toi bien!  À vos marques! Prêts? Plantez!!</h3>\n        </div>\n      </div>\n    </div>\n  </div>\n);\nexport default Home;\n","// Import\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n// Local Import\nimport logo from '../../assets/images/GreenPocketLogo.png';\nimport './style.scss';\n\nconst NavBar = () => (\n  <div className=\"header\">\n    <nav className=\"nav\">\n      <div className=\"nav--logo\">\n        <img src={logo} alt=\"logo\" />\n      </div>\n      <div className=\"nav--links\">\n        <NavLink exact className=\"nav--link link-accueil\" to=\"/\">\n          Accueil\n        </NavLink>\n        <NavLink\n          exact\n          className=\"nav--link link-catalog\"\n          to=\"/catalog\"\n        >\n          Catalogue\n        </NavLink>\n        <NavLink exact className=\"nav--link link-garden\" to=\"/garden\">\n          Mon jardin\n        </NavLink>\n        <NavLink exact className=\"nav--link link-calendar\" to=\"/calendar\">\n          Calendrier\n        </NavLink>\n        <NavLink exact className=\"nav--link link-profil\" to=\"/profil\">\n          Mon profil\n        </NavLink>\n        <a className=\"nav--link link-profil\" href=\"http://54.87.69.37/Projet-green-pocket-back/public/login\" target=\"_blank\" rel=\"backoffice\">\n          BackOffice\n        </a>\n      </div>\n    </nav>\n  </div>\n);\n\nexport default NavBar;\n","// Import\nimport React from 'react';\n\n// Local Import\nimport calendarLogo from '../../assets/images/Calendar.png';\n\nimport '../App/style.scss';\nimport './style.scss';\n\nconst Calendar = () => (\n  <div className=\"section-right\">\n    <h1> Mon Calendrier</h1>\n    <div>\n      <div className=\"ui calendar\" id=\"inline_calendar\">\n        <img src={calendarLogo} alt=\"calendar\" />\n      </div>\n    </div>\n  </div>\n);\n\nexport default Calendar;\n","// Import\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Edit } from 'react-feather';\n\n// Local Import\n// import profilCover from '../../assets/images/profil-cover.png';\n// import profilPic from '../../assets/images/profil-pic.png';\nimport './style.scss';\n\nconst Profil = ({ currentUser, profilEdit, onEditInput }) => {\n  console.log('PROFIL');\n  const classActiveEdit = profilEdit ? '' : 'edit-not-active';\n  return (\n    <div className=\"section-right\">\n      <div className=\"view_profil\">\n        <div className=\"view_profil--content\">\n          <div className=\"background--picture\">\n            <div className=\"picture_user\">\n              <span className=\"icon-user_picture\"><Edit /></span>\n            </div>\n            <span className=\"icon-back_picture\"><Edit /></span>\n          </div>\n          <div className=\"content_user\">\n            <form className=\"form_profil\">\n              <div className=\"fields--left\">\n                <div className=\"form_profil--input\">\n                  <p>{currentUser.firstName}</p>\n                  <input className={classActiveEdit} type=\"texte\" name=\"firstName\" value=\"\" />\n                </div>\n                <div className=\"form_profil--input\">\n                  <p>{currentUser.lastName}</p>\n                  <input className={classActiveEdit} type=\"texte\" name=\"lasttName\" value=\"\" />\n                </div>\n                <div className=\"form_profil--input\">\n                  <p>Pseudo :</p>\n                  <input className={classActiveEdit} type=\"text\" name=\"pseudo\" value=\"\" />\n                </div>\n                <div className=\"form_profil--input\">\n                  <p>Ville : {currentUser.country}</p>\n                  <input className={classActiveEdit} type=\"texte\" name=\"country\" value=\"\" />\n                </div>\n                <div className=\"form_profil--input\">\n                  <p>Code Postal : {currentUser.citycode}</p>\n                  <input className={classActiveEdit} type=\"number\" name=\"cp\" value=\"\" />\n                </div>\n              </div>\n              <div className=\"fields--right\">\n                <div className=\"form_profil--input\">\n                  <p>{currentUser.email}</p>\n                  <input className={classActiveEdit} type=\"email\" name=\"email\" value=\"jean-meudesoif@sacavin.com\" />\n                </div>\n                <div className=\"form_profil--input\">\n                  <p>Date de naissance :</p>\n                  <input className={classActiveEdit} type=\"date\" name=\"date\" value=\"\" />\n                </div>\n                <div className=\"form_profil--input\">\n                  <p>Mot de passe : ****</p>\n                  <input className={classActiveEdit} type=\"password\" name=\"password\" value=\"\" />\n                </div>\n              </div>\n            </form>\n            <button type=\"button\" onClick={onEditInput} className=\"btn-toggle-edit\">\n              Modifier mes données\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nProfil.propTypes = {\n  currentUser: PropTypes.shape().isRequired,\n  profilEdit: PropTypes.bool.isRequired,\n  onEditInput: PropTypes.func.isRequired,\n};\n\nexport default Profil;\n","import { connect } from 'react-redux';\n\nimport Profil from '../components/Profil';\n\nimport { editProfil } from '../actions/profilActions';\n\n// PrivateRoute container :\nconst mapState = (state) => ({\n  currentUser: state.loginReducer.user,\n  profilEdit: state.profilReducer.onEditInput,\n});\n\nconst mapDispatch = (dispacth) => ({\n  onEditInput: () => {\n    dispacth(editProfil());\n  },\n});\n\nexport default connect(mapState, mapDispatch)(Profil);\n","// Name action\nexport const EDIT_PROFIL = 'EDIT_PROFIL';\n\n// Function action\nexport const editProfil = () => ({\n  type: EDIT_PROFIL,\n});\n","// Imports\nimport React from 'react';\nimport Proptypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Search, ChevronRight, ChevronLeft, ChevronsLeft, ChevronsRight,\n} from 'react-feather';\n\n// Local Imports\nimport logo from '../../assets/images/PocketLogo.png';\nimport './style.scss';\n\nconst Garden = ({\n  listPlantUser,\n  firstPage,\n  previousPage,\n  nextPage,\n  lastPage,\n  removePlant,\n  nbPlant,\n}) => (\n  <div className=\"section-right\">\n    <div className=\"garden\">\n      <div className=\"garden--header\">\n        <div className=\"garden-header--title\">\n          <h1 className=\"garden_title\"> Mon jardin</h1>\n        </div>\n\n        <div className=\"gardenHeader--searchBar\">\n\n          <div className=\"searchBar--input\">\n            <input type=\"text\" placeholder=\"Rechercher...\" />\n            <button\n              type=\"submit\"\n            >\n              <Search className=\"searchBar--icon\" />\n            </button>\n          </div>\n\n          <div className=\"searchBar--pagination\">\n            <div className=\"button_paginnation\">\n              <button\n                className=\"buttonSearch\"\n                type=\"button\"\n                onClick={firstPage}\n              >\n                <ChevronsLeft />\n              </button>\n              <button\n                className=\"buttonSearch\"\n                type=\"button\"\n                onClick={previousPage}\n              >\n                <ChevronLeft />\n              </button>\n              <button\n                className=\"buttonSearch\"\n                type=\"button\"\n                onClick={nextPage}\n              >\n                <ChevronRight />\n              </button>\n              <button\n                className=\"buttonSearch\"\n                type=\"button\"\n                onClick={lastPage}\n              >\n                <ChevronsRight />\n              </button>\n            </div>\n            <div className=\"text_resultat\">\n              <p>{nbPlant} plantes dans ton jardin.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"cardList\">\n        <div className=\"cardList--user\">\n          {\n              listPlantUser.map((plantUser) => {\n                console.log(plantUser);\n                return (\n                  <div key={plantUser.id} className=\"cardGarden\">\n                    <div className=\"cardGarden--border\">\n                      <div className=\"cardGarden--image\">\n                        <img className=\"gardenLogo\" src={logo} alt={plantUser.plantmodel.name} />\n                      </div>\n                      <div className=\"cardGarden--content\">\n                        <h3> {plantUser.pseudoPlant} </h3>\n                        <p> {plantUser.plantmodel.Description} </p>\n                        <Link to={`/garden/${plantUser.slug}`}>\n                          <button className=\"showUserPlant\" type=\"submit\">Afficher toute ma plante</button>\n                        </Link>\n                        <button\n                          className=\"removePlant\"\n                          type=\"button\"\n                          onClick={() => {\n                            removePlant(plantUser.id);\n                          }}\n                        >\n                          Supprimer ma plante\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n\n    </div>\n  </div>\n);\nGarden.propTypes = {\n  removePlant: Proptypes.func.isRequired,\n  listPlantUser: Proptypes.arrayOf(\n    Proptypes.shape({\n      id: Proptypes.number,\n      name: Proptypes.string,\n      pseudoPlant: Proptypes.string,\n      Description: Proptypes.string,\n    }),\n  ).isRequired,\n  firstPage: Proptypes.func.isRequired,\n  previousPage: Proptypes.func.isRequired,\n  nextPage: Proptypes.func.isRequired,\n  lastPage: Proptypes.func.isRequired,\n};\n\nexport default Garden;\n","// Import :\nimport { connect } from 'react-redux';\n\n// Import local :\nimport Garden from '../components/Garden';\n\n// Import actions :\nimport {\n  fetchPlantBack,\n  fetchPlantNext,\n  fetchPlantFirst,\n  fetchPlantLast,\n} from '../actions/listPlantApiAction';\n\nimport { fetchPlantUser } from '../actions/userPlantActions';\n\nimport { removePlantUser } from '../actions/removePlantAction';\n\n// Container Garden :\nconst mapState = (state) => ({\n  listPlantUser: state.plantUserReducer.list,\n  nbPlant: state.plantUserReducer.nbrResultUser,\n});\n\nconst mapDispatch = (dispatch) => ({\n  previousPage: () => {\n    console.log('PAGE BACK');\n    dispatch(fetchPlantBack());\n    dispatch(fetchPlantUser());\n  },\n  nextPage: () => {\n    console.log('PAGE NEXT');\n    dispatch(fetchPlantNext());\n    dispatch(fetchPlantUser());\n  },\n  firstPage: () => {\n    console.log('PAGE NEXT');\n    dispatch(fetchPlantFirst());\n    dispatch(fetchPlantUser());\n  },\n  lastPage: () => {\n    console.log('PAGE NEXT');\n    dispatch(fetchPlantLast());\n    dispatch(fetchPlantUser());\n  },\n  removePlant: (idPlant) => {\n    dispatch(removePlantUser(idPlant));\n  },\n});\n\nexport default connect(mapState, mapDispatch)(Garden);\n","// Names actions :\nexport const FETCH_PLANT_SUCCESS = 'FETCH_PLANT_SUCCESS';\nexport const FETCH_PLANT = 'FETCH_PLANT';\nexport const FETCH_PLANT_ERROR = 'FETCH_PLANT_ERROR';\nexport const FETCH_PLANT_BACK = 'FETCH_PLANT_BACK';\nexport const FETCH_PLANT_NEXT = 'FETCH_PLANT_NEXT';\nexport const FETCH_PLANT_FIRST = 'FETCH_PLANT_FIRST';\nexport const FETCH_PLANT_LAST = 'FETCH_PLANT_LAST';\n\n// Function actions :\nexport const fetchPlant = () => ({\n  type: FETCH_PLANT,\n});\n\nexport const fetchPlantSuccess = (payload) => ({\n  type: FETCH_PLANT_SUCCESS,\n  payload,\n});\n\nexport const fetchPlantError = () => ({\n  type: FETCH_PLANT_ERROR,\n});\n\nexport const fetchPlantBack = () => ({\n  type: FETCH_PLANT_BACK,\n});\n\nexport const fetchPlantNext = () => ({\n  type: FETCH_PLANT_NEXT,\n});\n\nexport const fetchPlantFirst = () => ({\n  type: FETCH_PLANT_FIRST,\n});\n\nexport const fetchPlantLast = () => ({\n  type: FETCH_PLANT_LAST,\n});\n","// Names actions :\nexport const FETCH_PLANT_USER = 'FETCH_PLANT_USER';\nexport const FETCH_PLANT_USER_SUCCESS = 'FETCH_PLANT_USER_SUCCESS';\n\n// Import : Function action\nexport const fetchPlantUser = () => ({\n  type: FETCH_PLANT_USER,\n});\n\nexport const fetchPlantUserSuccess = (payload) => ({\n  type: FETCH_PLANT_USER_SUCCESS,\n  payload,\n});\n","// Name action\nexport const REMOVE_PLANT_USER = 'REMOVE_PLANT_USER';\n\n// Function action\nexport const removePlantUser = (payload) => ({\n  type: REMOVE_PLANT_USER,\n  payload,\n});\n","// Import\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  CornerUpLeft,\n  Edit,\n  Trash,\n  Archive,\n} from 'react-feather';\n\n// Local Import\nimport logo from '../../assets/images/PocketLogo.png';\nimport '../App/style.scss';\nimport './style.scss';\n\nconst SinglePlantUser = ({ plant }) => {\n  console.log('MA PLANTE USER');\n  console.log(plant);\n  return (\n    <div className=\"section-right\">\n      <div className=\"plant_garden\">\n        <div className=\"plant_garden--single\">\n          <Link to=\"/garden\">\n            <div className=\"btn-back-to-garden\">\n              <CornerUpLeft />\n            </div>\n          </Link>\n          <div className=\"single_plantUser_img\">\n            <img src={logo} alt=\"\" />\n          </div>\n\n          <div className=\"single_plantUser_content\">\n            <div className=\"contentPlantUser_head\">\n              <h3>{plant.pseudoPlant}</h3>\n              <p>Catégorie : <span>{plant.plantmodel.category}</span> </p>\n              <p>Famille : <span>{plant.plantmodel.family}</span></p>\n              <p>Type : <span>{plant.plantmodel.type}</span></p>\n            </div>\n            <div className=\"contentPlantUser_main\">\n              <div className=\"contentPlantUser_main--jardinage\">\n                <h3>Mode de vie</h3>\n                <p>Entretien</p>\n                <p>Besoin en eau</p>\n                <p>Croissance</p>\n                <p>Multiplication</p>\n                <p>Résistance au froid</p>\n                <p>Densité</p>\n              </div>\n              <div className=\"contentPlantUser_main--emplacement\">\n                <h3>Milieu de vie</h3>\n                <p>Exposition</p>\n                <p>Plantation</p>\n                <p>Date de plantation</p>\n                <p>Végétation</p>\n                <p>Type de sol</p>\n                <p>PH du sol</p>\n                <p>Taux d'humidité du sol</p>\n              </div>\n            </div>\n            <div className=\"contentPlantUser_footer\">\n              <p> Description : <span>{plant.plantmodel.Description}</span> </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"plant_garden_organisation\">\n          <div className=\"organisation_title\">\n            <h3> Organisation </h3>\n          </div>\n          <div className=\"organisation_tasks_list\">\n            <ul className=\"tasks_list\">\n              <Tasks />\n              <Tasks />\n              <Tasks />\n              <Tasks />\n            </ul>\n          </div>\n          <div className=\"add_task\">\n            <form className=\"add_task_form\">\n              <input\n                className=\"task_input\"\n                type=\"text\"\n                value=\"\"\n                placeholder=\"Ajouter une tâche\"\n              />\n              <button\n                className=\"task_button\"\n                type=\"submit\"\n              >\n                +\n              </button>\n            </form>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SinglePlantUser;\n\nconst Tasks = () => (\n  <li className=\"task\">\n    <input\n      className=\"task--check\"\n      type=\"checkbox\"\n      style={{ color: 'red' }}\n    />\n    <span className=\"task--text\">\n      <p> J'arrose mes plantes </p>\n    </span>\n    <div className=\"task--buttons\">\n      <button type=\"button\" className=\"task_btn edit\"> <Edit /> </button>\n      <button type=\"button\" className=\"task_btn remove\"> <Trash /> </button>\n      <button type=\"button\" className=\"task_btn archive\"> <Archive /> </button>\n    </div>\n  </li>\n);\n\nSinglePlantUser.propTypes = {\n  plant: PropTypes.shape().isRequired,\n};\n","export const getPlantBySlug = (list, slugPlant) => {\n    return list.find(plant => plant.slug === slugPlant)\n}\n","// Import : npm\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n// Import : Local\nimport SinglePlantUser from '../components/SinglePlantUser';\n\nimport { getPlantBySlug } from '../selectors/plantlist';\n\n// Import : actions\n\nconst mapState = (state, ownProps) => {\n  const { slug } = ownProps.match.params;\n  return {\n    plant: getPlantBySlug(state.plantUserReducer.list, slug),\n  };\n};\n\nconst mapDispatch = null;\n\nexport default withRouter(connect(mapState, mapDispatch)(SinglePlantUser));\n","// Import\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ChevronRight, CornerUpLeft,\n} from 'react-feather';\nimport { Link } from 'react-router-dom';\n\n// Local Import\nimport pocketLogo from '../../assets/images/PocketLogo.png';\nimport '../App/style.scss';\nimport './style.scss';\n\nconst SinglePlantApi = ({ plant }) => {\n  return (\n    <div className=\"section-right\">\n      <div className=\"plant_catalog\">\n        <div className=\"plant_catalog--single\">\n          <Link to=\"/catalog\">\n            <div className=\"btn-back-to-catalog\">\n              <CornerUpLeft />\n            </div>\n          </Link>\n          <div className=\"single_plant_img\">\n            <img src={plant.picture} alt={plant.name} />\n          </div>\n\n          <div className=\"single_plant_content\">\n            <div className=\"content_head\">\n              <h3>Nom       : <span>{plant.name}</span> </h3>\n              <p>Catégorie  : <span>{plant.category}</span> </p>\n              <p>Famille    : <span>{plant.family}</span> </p>\n              <p>Type       : <span>{plant.type}</span> </p>\n            </div>\n            <div className=\"content_main\">\n              <div className=\"content_main--jardinage\">\n                <h3>MODE DE VIE</h3><br />\n                <p>Entretien : <span>{plant.upKeep}</span> </p>\n                <p>Besoin en eau : <span>{plant.needWater}</span> </p>\n                <p>Croissance : <span>{plant.growth}</span> </p>\n                <p>Multiplication : <span>{plant.multiplication}</span> </p>\n                <p>Résistance au froid : <span>{plant.frostResistance}</span> </p>\n                <p>Densité : <span>{plant.density}</span> </p>\n              </div>\n              <div className=\"content_main--emplacement\">\n                <h3>MILIEU DE VIE</h3><br />\n                <p>Exposition : <span>{plant.exposure}</span> </p>\n                <p>Plantation : <span>{plant.plantationType}</span> </p>\n                <p>Date de plantation : <span>Avril, Mai,Juin</span></p>\n                <p>Végétation : <span>{plant.foliage}</span> </p>\n                <p>Type du sol : <span>{plant.groundType}</span> </p>\n                <p>PH du sol : <span>{plant.groundPh}</span> </p>\n                <p>Humidité du sol : <span>{plant.groundHumidity}</span> </p>\n              </div>\n            </div>\n            <div className=\"content_footer\">\n              <p>Description : <span>{plant.Description}</span> </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"plant_catalog--user\">\n          <h3>Plantes des amis jardiniers</h3>\n\n          {\n          plant.plantUsers.map((plantUObj) => (\n            <div key={plantUObj.id} className=\"plant-user-list\">\n              <div className=\"plant-user\">\n                <div className=\"plant-user-img\">\n                  <img src={pocketLogo} alt={plant.name} />\n                </div>\n                <div className=\"plant-user-content\">\n                  <p>Nom: <span>{plantUObj.pseudoPlant}</span></p>\n                  <p>Plante de <span>{plantUObj.user.pseudoUser}</span></p>\n                </div>\n                <Link to={`/plant/${plantUObj.slug}`} className=\"plant-user-link\">\n                  <ChevronRight />\n                </Link>\n              </div>\n            </div>\n          ))\n        }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SinglePlantApi;\n\nSinglePlantApi.propTypes = {\n  plant: PropTypes.shape().isRequired,\n};\n","// Import : npm\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n// Import : Local\nimport SinglePlantApi from '../components/SinglePlantApi';\n\nimport { getPlantBySlug } from '../selectors/plantlist';\n\n// Import : actions\n\nconst mapState = (state, ownProps) => {\n  const { slug } = ownProps.match.params;\n  return {\n    plant: getPlantBySlug(state.plantListApi.list, slug),\n  };\n};\n\nconst mapDispatch = null;\n\nexport default withRouter(connect(mapState, mapDispatch)(SinglePlantApi));\n","// Import\nimport React from 'react';\nimport Proptypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  Plus, Search, ChevronRight, ChevronLeft, ChevronsLeft, ChevronsRight,\n} from 'react-feather';\n// Local Imports,\nimport '../App/style.scss';\nimport './style.scss';\n\nconst Catalog = ({\n  plantListApi,\n  previousPage,\n  nextPage,\n  firstPage,\n  lastPage,\n  nbPlant,\n  currentPage,\n  onButtonSubmit,\n  addPlantInputChange,\n  pseudoPlant,\n  addIdPlant,\n  messageAddPlant,\n}) => {\n  const { list } = plantListApi;\n  return (\n    <div className=\"section-right\">\n      <div className=\"catalog\">\n\n        <div className=\"catalogHeader\">\n          <div className=\"catalogHeader--title\">\n            <h1> Mon Catalogue</h1>\n          </div>\n\n          <div className=\"catalogHeader--searchBar\">\n\n            <div className=\"searchBar--input\">\n              <input type=\"text\" placeholder=\"Rechercher...\" />\n              <button\n                type=\"submit\"\n              >\n                <Search className=\"searchBar--icon\" />\n              </button>\n            </div>\n\n            <div className=\"searchBar--pagination\">\n              <div className=\"button_paginnation\">\n                <button\n                  className=\"buttonSearch\"\n                  type=\"button\"\n                  onClick={firstPage}\n                >\n                  <ChevronsLeft />\n                </button>\n                <button\n                  className=\"buttonSearch\"\n                  type=\"button\"\n                  onClick={previousPage}\n                >\n                  <ChevronLeft />\n                </button>\n                <button\n                  className=\"buttonSearch\"\n                  type=\"button\"\n                  onClick={nextPage}\n                >\n                  <ChevronRight />\n                </button>\n                <button\n                  className=\"buttonSearch\"\n                  type=\"button\"\n                  onClick={lastPage}\n                >\n                  <ChevronsRight />\n                </button>\n              </div>\n              <div className=\"text_resultat\">\n                <p>{nbPlant} résultats trouvés, page : {currentPage}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"cardList\">\n          <div className=\"cardList--api\">\n            <div className=\"palntApiList\">\n              {\n                list.map((plantObj) => (\n                  <div key={plantObj.id} className=\"cardApi\">\n                    <div className=\"cardApi--plant\">\n                      <div className=\"image\">\n                        <img src={plantObj.picture} alt={plantObj.name} />\n                      </div>\n                      <div className=\"contentCard\">\n                        <h3> {plantObj.name} </h3>\n                        <h4> {plantObj.family} </h4>\n                        <p> {plantObj.Description} </p>\n                        <div className=\"contentCard--hover\">\n                          <div className=\"hover--icon\">\n                            <Plus className=\"contentCard--icon\" />\n                          </div>\n                          <div className=\"hover--content\">\n                            <div className=\"hover--add\">\n                              <p>Ajouter cette plante à mon jardin</p>\n                              <div className=\"addPlant\">\n                                <form\n                                  onSubmit={(e) => {\n                                    e.preventDefault();\n                                    onButtonSubmit();\n                                  }}\n                                >\n                                  <input\n                                    className=\"addPlant--input\"\n                                    type=\"text\"\n                                    placeholder=\"Personnalise son nom\"\n                                    value={pseudoPlant}\n                                    onChange={(e) => {\n                                      const newPseudoPlant = e.target.value;\n                                      addPlantInputChange(newPseudoPlant);\n                                    }}\n                                  />\n                                  <button\n                                    className=\"addPlant--button\"\n                                    type=\"submit\"\n                                    onClick={() => addIdPlant(plantObj.id)}\n                                    onSubmit={(event) => {\n                                      event.preventDefault();\n                                      onButtonSubmit();\n                                    }}\n                                  >\n                                    +\n                                  </button>\n                                  <p id=\"txt-add-plant\" className=\"txt-add-plant\"> {messageAddPlant} </p>\n                                </form>\n                              </div>\n                            </div>\n                            <div className=\"hover--show\">\n                              <Link to={`/catalog/${plantObj.slug}`}>\n                                <button className=\"showPlant\" type=\"submit\">Afficher la plante</button>\n                              </Link>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              }\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCatalog.propTypes = {\n  messageAddPlant: Proptypes.string.isRequired,\n  addIdPlant: Proptypes.func.isRequired,\n  nbPlant: Proptypes.number.isRequired,\n  currentPage: Proptypes.number.isRequired,\n  lastPage: Proptypes.func.isRequired,\n  firstPage: Proptypes.func.isRequired,\n  previousPage: Proptypes.func.isRequired,\n  nextPage: Proptypes.func.isRequired,\n  addPlantInputChange: Proptypes.func.isRequired,\n  onButtonSubmit: Proptypes.func.isRequired,\n  pseudoPlant: Proptypes.string.isRequired,\n  plantListApi: Proptypes.shape({\n    list: Proptypes.arrayOf(\n      Proptypes.shape({\n        id: Proptypes.number,\n        name: Proptypes.string,\n        family: Proptypes.string,\n        Description: Proptypes.string,\n      }),\n    ).isRequired,\n  }).isRequired,\n};\n\nexport default Catalog;\n","// Import : npm\nimport { connect } from 'react-redux';\n\n// Import : Local\nimport Catalog from '../components/Catalog';\n\n// Import : actions\nimport {\n  fetchPlantBack,\n  fetchPlantNext,\n  fetchPlantFirst,\n  fetchPlantLast,\n  fetchPlant,\n} from '../actions/listPlantApiAction';\nimport {\n  addPlantInputChange,\n  addPlantSubmit,\n  addIdPlant,\n} from '../actions/addPlantAction';\n\nconst mapState = (state) => ({\n  plantListApi: state.plantListApi,\n  currentPage: state.plantListApi.numberPage,\n  nbPlant: state.plantListApi.nbrResultAPI,\n  pseudoPlant: state.plantListApi.pseudoAddPlant,\n  messageAddPlant: state.plantListApi.txtAddPlant,\n});\n\nconst mapDispatch = (dispatch) => ({\n  previousPage: () => {\n    console.log('PAGE BACK');\n    dispatch(fetchPlantBack());\n    dispatch(fetchPlant());\n  },\n  nextPage: () => {\n    console.log('PAGE NEXT');\n    dispatch(fetchPlantNext());\n    dispatch(fetchPlant());\n  },\n  firstPage: () => {\n    console.log('PAGE NEXT');\n    dispatch(fetchPlantFirst());\n    dispatch(fetchPlant());\n  },\n  lastPage: () => {\n    console.log('PAGE NEXT');\n    dispatch(fetchPlantLast());\n    dispatch(fetchPlant());\n  },\n  addPlantInputChange: (newPseudoPlant) => {\n    console.log('pseudo plante user');\n    dispatch(addPlantInputChange(newPseudoPlant));\n  },\n  addIdPlant: (idPlant) => {\n    console.log(idPlant);\n    dispatch(addIdPlant(idPlant));\n  },\n  onButtonSubmit: () => {\n    console.log('j\\'ajoute une plante');\n    dispatch(addPlantSubmit());\n  },\n});\n\nexport default connect(mapState, mapDispatch)(Catalog);\n","// Import name actions\nexport const ADD_PLANT_INPUT_CHANGE = 'ADD_PLANT_INPUT_CHANGE';\nexport const ADD_PLANT_SUBMIT = 'ADD_PLANT_SUBMIT';\nexport const ADD_PLANT_SUCCESS = 'ADD_PLANT_SUCCESS';\nexport const ADD_ID_PLANT = 'ADD_ID_PLANT';\nexport const RESET_ADD_TXT = 'RESET_ADD_TXT';\n\n// Actions\nexport const resetTxtAddPlant = () => ({\n  type: RESET_ADD_TXT,\n});\n\nexport const addPlantInputChange = (payload) => ({\n  type: ADD_PLANT_INPUT_CHANGE,\n  payload,\n});\n\nexport const addPlantSubmit = () => ({\n  type: ADD_PLANT_SUBMIT,\n});\n\nexport const addPlantSuccess = () => ({\n  type: ADD_PLANT_SUCCESS,\n});\n\nexport const addIdPlant = (payload) => ({\n  type: ADD_ID_PLANT,\n  payload,\n});\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\n// Import\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\nimport { ArrowRightCircle } from 'react-feather';\n\n// Import Local\nimport './style.scss';\n\n// Component Login =>\nconst Login = ({\n  formDataLog,\n  changeInput,\n  onLoginSubmit,\n  isLogged,\n  messageLog,\n}) => {\n  const history = useHistory();\n  const handleInputChange = (evt) => {\n    const { name, value } = evt.target;\n    changeInput({\n      [name]: value,\n    });\n  };\n\n  useEffect(() => {\n    // other code\n    if (isLogged === true) {\n      history.push('/');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLogged]);\n\n  return (\n\n    <div className=\"login\">\n      <div className=\"welcome\">\n        <p>\n          Bienvenue à toi ami des plantes!\n        </p>\n      </div>\n      <div className=\"login--content\">\n        <form\n          className=\"form\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            onLoginSubmit();\n          }}\n        >\n          <div>\n            <label name=\"email\">\n              <i className=\"fas fa-seedling logoPseudo\" />\n            </label>\n            <input\n              className=\"form--pseudo\"\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email\"\n              name=\"email\"\n              value={formDataLog.email}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <label name=\"pwd\">\n              <i className=\"fas fa-unlock-alt logoPwd\" />\n            </label>\n            <input\n              className=\"form--pwd\"\n              type=\"password\"\n              id=\"pwd\"\n              placeholder=\"Mot de passe\"\n              name=\"password\"\n              value={formDataLog.password}\n              onChange={handleInputChange}\n            />\n          </div>\n          <button\n            className=\"form--buttonSubmit\"\n            type=\"submit\"\n          >\n            Login\n          </button>\n          <div>\n            <span className=\"txtLog\"> {messageLog} </span>\n          </div>\n        </form>\n      </div>\n      <div className=\"linkRegister\">\n        <p>\n          Si tu n'es pas encore membre de Green Pocket nous t'invitons à nous rejoindre :\n        </p>\n      </div>\n      <Link\n        to=\"/register\"\n      >\n        <ArrowRightCircle className=\"logoRegister\" />\n      </Link>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  formDataLog: PropTypes.shape({\n    email: PropTypes.string,\n    password: PropTypes.string,\n  }),\n  changeInput: PropTypes.func.isRequired,\n  onLoginSubmit: PropTypes.func.isRequired,\n  isLogged: PropTypes.bool.isRequired,\n};\n\nLogin.defaultProps = {\n  formDataLog: {\n    email: '',\n    password: '',\n  },\n};\n\nexport default Login;\n","import { connect } from 'react-redux';\nimport Login from '../components/Login';\nimport { changeInput, loginSubmit } from '../actions/loginActions';\n\nconst mapState = (state) => ({\n  formDataLog: state.loginReducer.user,\n  isLogged: state.loginReducer.isLogged,\n  messageLog: state.loginReducer.txtUserLog,\n});\n\nconst mapDispatch = (dispatch) => ({\n  changeInput: (value, name) => {\n    dispatch(changeInput(value, name));\n  },\n\n  onLoginSubmit: () => {\n    dispatch(loginSubmit());\n  },\n});\n\nexport default connect(mapState, mapDispatch)(Login);\n","// Import\nimport React from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\n// Local Import\nimport '../App/style.scss';\nimport './style.scss';\n\nconst Loading = () => (\n  <div className=\"loading_page\">\n    <Loader\n      type=\"Puff\"\n      color=\"#D68D60\"\n      height={100}\n      width={100}\n      timeout={3000}\n    />\n  </div>\n);\n\nexport default Loading;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n// Import\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { ArrowLeftCircle } from 'react-feather';\n\n// Import Local\nimport './style.scss';\n\n// Component Register =>\nconst Register = ({\n  formData,\n  onInputRegisterChange,\n  onFormRegisterSubmit,\n  messageLog,\n}) => {\n  const handleInputChange = (evt) => {\n    // Fonction permettant de récupérer toutes les infos saisies dans les input.\n    const { name, value } = evt.target;\n    onInputRegisterChange({\n      [name]: value,\n    });\n  };\n\n  return (\n\n    <div className=\"container\">\n      <div className=\"container--register\">\n        <form\n          className=\"formRegister\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            onFormRegisterSubmit();\n          }}\n        >\n          <label name=\"firstName\" className=\"formRegister--label\">\n            J'entre mon prénom<span>*</span>\n          </label>\n          <input\n            className=\"formRegister--input\"\n            type=\"text\"\n            id=\"firstName\"\n            placeholder=\"Raoul\"\n            name=\"firstName\"\n            value={formData.firstName}\n            onChange={handleInputChange}\n\n          />\n          <label name=\"lasttName\" className=\"formRegister--label\">J'entre mon nom<span>*</span></label>\n          <input\n            className=\"formRegister--input\"\n            type=\"text\"\n            id=\"lasttName\"\n            placeholder=\"Rateau\"\n            name=\"lastName\"\n            value={formData.lastName}\n            onChange={handleInputChange}\n\n          />\n          <label name=\"pseudo\" className=\"formRegister--label\">Je choisi mon pseudo<span>*</span></label>\n          <input\n            className=\"formRegister--input\"\n            type=\"text\"\n            id=\"pseudo\"\n            placeholder=\"Ton pseudo, nouveau Gardener!!\"\n            name=\"pseudo\"\n            value={formData.pseudo}\n            onChange={handleInputChange}\n\n          />\n          <label name=\"email\" className=\"formRegister--label\">J'entre mon email<span>*</span></label>\n          <input\n            className=\"formRegister--input\"\n            type=\"email\"\n            id=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleInputChange}\n\n          />\n          <label name=\"password\" className=\"formRegister--label\">Je choisis mon mot de passe<span>*</span></label>\n          <input\n            className=\"formRegister--input\"\n            type=\"password\"\n            id=\"password\"\n            placeholder=\"Mot de passe\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleInputChange}\n\n          />\n          <label name=\"dateofbirth\" className=\"formRegister--label\">Date de naissance<span>*</span></label>\n          <input\n            className=\"formRegister--input\"\n            type=\"date\"\n            id=\"dateofbirth\"\n            placeholder=\"Date de naissance\"\n            name=\"dateofbirth\"\n            value={formData.dateofbirth}\n            onChange={handleInputChange}\n\n          />\n          <label name=\"country\" className=\"formRegister--label\">Ma ville<span>*</span></label>\n          <input\n            className=\"formRegister--input\"\n            type=\"text\"\n            id=\"country\"\n            placeholder=\"Ville\"\n            name=\"country\"\n            value={formData.country}\n            onChange={handleInputChange}\n\n          />\n          <label name=\"citycode\" className=\"formRegister--label\">Son code postal<span>*</span></label>\n          <input\n            className=\"formRegister--input\"\n            type=\"number\"\n            id=\"citycode\"\n            placeholder=\"Code postal\"\n            name=\"citycode\"\n            value={formData.citycode}\n            onChange={handleInputChange}\n\n          />\n          <button\n            className=\"formRegister--button\"\n            type=\"submit\"\n          >\n            À vos marques, prêts? Plantez!!!\n            <i className=\"far fa-arrow-alt-circle-right\" />\n          </button>\n        </form>\n        <div className=\"buttonBack\">\n          <Link\n            exact=\"true\"\n            to=\"/login\"\n          >\n            <ArrowLeftCircle className=\"buttonBack--icon\" />\n          </Link>\n          <p>Cliquer ici pour revenir sur l'espace de login.</p>\n        </div>\n        <div className=\"messageLog\">\n          <p>{messageLog}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nRegister.propTypes = {\n  messageLog: PropTypes.string.isRequired,\n  formData: PropTypes.shape({\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n    pseudo: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    altPassword: PropTypes.string.isRequired,\n  }).isRequired,\n  onInputRegisterChange: PropTypes.func.isRequired,\n  onFormRegisterSubmit: PropTypes.func.isRequired,\n}.isRequired;\n\nexport default Register;\n","// Import : npm\nimport { connect } from 'react-redux';\n\n// Import : Local\nimport Register from '../components/Register';\n\n// Import : actions\nimport { registerInputChange, registerFormSubmit } from '../actions/loginActions';\n\nconst mapState = (state) => ({\n  formData: state.loginReducer.user,\n  messageLog: state.loginReducer.txtNewUser,\n});\n\nconst mapDispatch = (dispatch) => ({\n  onFormRegisterSubmit: () => {\n    dispatch(registerFormSubmit());\n  },\n\n  onInputRegisterChange: (enteredText) => {\n    dispatch(registerInputChange(enteredText));\n  },\n});\n\nexport default connect(mapState, mapDispatch)(Register);\n","// Import : npm\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n// Import : Local\nimport SinglePlantUser from '../components/SinglePlantUser';\n\nimport { getPlantBySlug } from '../selectors/plantlist';\n\n// Import : actions\n\nconst mapState = (state, ownProps) => {\n  const { slug } = ownProps.match.params;\n  return {\n    plant: getPlantBySlug(state.plantUserReducer.list, slug),\n  };\n};\n\nconst mapDispatch = null;\n\nexport default withRouter(connect(mapState, mapDispatch)(SinglePlantUser));\n","// Import :\nimport React from 'react';\nimport Proptypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ children, isLogged, ...rest }) => (\n  <Route\n    {...rest}\n    render={() => (\n      isLogged\n        ? children\n        : <Redirect to=\"/login\" />\n    )}\n  />\n);\n\nPrivateRoute.propTypes = {\n  isLogged: Proptypes.bool.isRequired,\n  children: Proptypes.bool.isRequired,\n};\n\nexport default PrivateRoute;\n","import { connect } from 'react-redux';\n\nimport PrivateRoute from '../components/PrivateRoute';\n\n// PrivateRoute container :\nconst mapState = (state) => ({\n  isLogged: state.loginReducer.isLogged,\n});\n\nconst mapDispatch = null;\n\nexport default connect(mapState, mapDispatch)(PrivateRoute);\n","// Import\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import Local\nimport './style.scss';\nimport { Route, Switch } from 'react-router-dom';\n\n// Import route access :\n\n// Import Components :\nimport SectionLeft from '../SectionLeft';\nimport LandingPage from '../LandingPage';\nimport Home from '../Home';\nimport Nav from '../Nav';\nimport Calendar from '../Calendar';\n\n// Import Containers :\nimport Profil from '../../containers/Profil';\nimport Garden from '../../containers/Garden';\nimport SinglePlantUser from '../../containers/SinglePlantUser';\nimport SinglePlantApi from '../../containers/SinglePlantApi';\nimport Catalog from '../../containers/Catalog';\nimport Login from '../../containers/Login';\nimport Loading from '../Loading';\nimport Register from '../../containers/Register';\nimport PlantUserFromApi from '../../containers/PlantUserFromApi';\n\n// Import PrivateRoute\nimport PrivateRoute from '../../containers/PrivateRoute';\n\n// Component App =>\nconst App = ({\n  isLogged,\n  checkAuth,\n  loadDataApi,\n  loading,\n  loadPlantUser,\n}) => {\n  useEffect(() => {\n    // other code\n    checkAuth();\n    loadDataApi();\n    loadPlantUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLogged]);\n\n  return (\n\n    <div className=\"App\">\n      {loading && <Loading />}\n      {!loading && (\n      <Switch>\n        <PrivateRoute exact path=\"/\">\n          <Nav />\n          <SectionLeft />\n          <Home />\n        </PrivateRoute>\n        <Route exact path=\"/login\">\n          <LandingPage />\n          <Login />\n        </Route>\n        <Route exact path=\"/register\">\n          <LandingPage />\n          <Register />\n        </Route>\n        <PrivateRoute exact path=\"/catalog\">\n          <Nav />\n          <SectionLeft />\n          <Catalog />\n        </PrivateRoute>\n        <PrivateRoute exact path=\"/catalog/:slug\">\n          <Nav />\n          <SectionLeft />\n          <SinglePlantApi />\n        </PrivateRoute>\n        <PrivateRoute path=\"/plant/:slug\">\n          <Nav />\n          <SectionLeft />\n          <PlantUserFromApi />\n        </PrivateRoute>\n        <PrivateRoute path=\"/profil\">\n          <Nav />\n          <SectionLeft />\n          <Profil />\n        </PrivateRoute>\n        <PrivateRoute exact path=\"/garden\">\n          <Nav />\n          <SectionLeft />\n          <Garden />\n        </PrivateRoute>\n        <PrivateRoute path=\"/garden/:slug\">\n          <Nav />\n          <SectionLeft />\n          <SinglePlantUser />\n        </PrivateRoute>\n        <PrivateRoute path=\"/calendar\">\n          <Nav />\n          <SectionLeft />\n          <Calendar />\n        </PrivateRoute>\n      </Switch>\n      )}\n    </div>\n  );\n};\n\nApp.propTypes = {\n  loadPlantUser: PropTypes.func.isRequired,\n  isLogged: PropTypes.bool.isRequired,\n  checkAuth: PropTypes.func.isRequired,\n  loadDataApi: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default App;\n","// Import : npm\nimport { connect } from 'react-redux';\n\n// Import : local\nimport App from '../components/App';\n\n// Import : Actions\nimport { checkAuth } from '../actions/loginActions';\nimport { fetchPlant } from '../actions/listPlantApiAction';\nimport { fetchPlantUser } from '../actions/userPlantActions';\n\n// App conatiner :\nconst mapState = (state) => ({\n  isLogged: state.loginReducer.isLogged,\n  loading: state.loginReducer.loading,\n  error: state.plantListApi.error,\n});\n\nconst mapDispatch = (dispatch) => ({\n  checkAuth: () => {\n    dispatch(checkAuth());\n  },\n  loadDataApi: () => {\n    dispatch(fetchPlant());\n  },\n  loadPlantUser: () => {\n    dispatch(fetchPlantUser());\n  },\n});\n\nexport default connect(mapState, mapDispatch)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Import\n\n// Import : Local\nimport {\n  LOGIN_INPUT_CHANGE,\n  LOGIN_SUBMIT,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  LOGOUT_SUCCESS,\n  REGISTER_FORM_SUBMIT,\n  REGISTER_INPUT_CHANGE,\n  ADD_USER_SUCCESS,\n  ADD_USER_ERR,\n  GET_CURRENT_USER,\n  SET_LOADING_STATE,\n} from '../actions/loginActions';\n\n// The State\nconst initialState = {\n  user: {\n    firstName: '',\n    lastName: '',\n    pseudo: '',\n    email: '',\n    password: '',\n    dateofbirth: '',\n    country: '',\n    citycode: '',\n    token: '',\n  },\n  txtNewUser: '',\n  txtUserLog: '',\n  isLogged: false,\n  loading: false,\n};\n\nconst loginReducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case LOGIN_INPUT_CHANGE:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload,\n        },\n      };\n    case LOGIN_SUBMIT:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          token: localStorage.getItem('token'),\n        },\n        loading: false,\n        isLogged: true,\n        txtUserLog: 'Tu es bien connecté.',\n      };\n    case LOGIN_ERROR:\n      return {\n        ...state,\n        loading: false,\n        isLogged: false,\n        txtUserLog: 'Il y a une erreur sur ton mail mot de passe?',\n      };\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          firstName: '',\n          lastName: '',\n          pseudo: '',\n          email: '',\n          dateofbirth: '',\n          country: '',\n          citycode: '',\n          token: localStorage.removeItem('token'),\n        },\n        isLogged: false,\n        txtUserLog: 'Tu es bien déconecté.',\n      };\n    case REGISTER_INPUT_CHANGE:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload,\n        },\n      };\n    case REGISTER_FORM_SUBMIT:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ADD_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        txtNewUser: 'Tu es bien enregistré, bienvenue nouveau jardiner! Tu peux désormé te connecter',\n      };\n    case ADD_USER_ERR:\n      return {\n        ...state,\n        txtNewUser: 'Une erreur est survenue sur une information, il faut faire attention!',\n        loading: false,\n      };\n    case GET_CURRENT_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          firstName: action.payload.firstname,\n          lastName: action.payload.lastname,\n          pseudo: action.payload.pseudo,\n          email: action.payload.email,\n          dateofbirth: action.payload.dateofbirth,\n          country: action.payload.country,\n          citycode: action.payload.citycode,\n        },\n      };\n    case SET_LOADING_STATE:\n      return {\n        ...state,\n        loading: action.loading,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","// Import : Local\nimport {\n  FETCH_PLANT,\n  FETCH_PLANT_SUCCESS,\n  FETCH_PLANT_ERROR,\n  FETCH_PLANT_BACK,\n  FETCH_PLANT_NEXT,\n  FETCH_PLANT_FIRST,\n  FETCH_PLANT_LAST,\n} from '../actions/listPlantApiAction';\nimport {\n  ADD_PLANT_INPUT_CHANGE,\n  ADD_PLANT_SUCCESS,\n  ADD_ID_PLANT,\n  RESET_ADD_TXT,\n} from '../actions/addPlantAction';\n\n// The State\nconst initialState = {\n  list: [],\n  loading: false,\n  error: false,\n  errorMessage: '',\n  numberPage: 1,\n  totalPage: '',\n  nbrResultAPI: '',\n  pseudoAddPlant: '',\n  idPlantCreate: '',\n  txtAddPlant: '',\n};\n\nconst plantListApi = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case FETCH_PLANT:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_PLANT_SUCCESS:\n      return {\n        ...state,\n        list: [...action.payload.data],\n        loading: false,\n        totalPage: action.payload.info.nbPage,\n        nbrResultAPI: action.payload.info.nbPlant,\n      };\n    case FETCH_PLANT_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        errorMessage: 'Le site rencontre un problème, merci de patienter',\n      };\n    case FETCH_PLANT_BACK:\n      return {\n        ...state,\n        numberPage: handleBackPage(state.numberPage),\n      };\n    case FETCH_PLANT_NEXT:\n      return {\n        ...state,\n        numberPage: handleNextPage(state.numberPage, state.totalPage),\n      };\n    case FETCH_PLANT_FIRST:\n      return {\n        ...state,\n        numberPage: handleFirstPage(),\n      };\n    case FETCH_PLANT_LAST:\n      return {\n        ...state,\n        numberPage: handleLastPage(state.totalPage),\n      };\n    case ADD_PLANT_INPUT_CHANGE:\n      return {\n        ...state,\n        pseudoAddPlant: action.payload,\n      };\n    case ADD_ID_PLANT:\n      return {\n        ...state,\n        idPlantCreate: action.payload,\n      };\n    case ADD_PLANT_SUCCESS:\n      return {\n        ...state,\n        pseudoAddPlant: '',\n        txtAddPlant: 'Ta plante à bien été ajoutée dans ton jardin.',\n      };\n    case RESET_ADD_TXT:\n      return {\n        ...state,\n        txtAddPlant: '',\n      };\n    default:\n      return state;\n  }\n};\nexport default plantListApi;\n\n// Paginnation back :\nconst handleBackPage = (page) => {\n  if (page > 1) {\n    return page - 1;\n  }\n  return 1;\n};\n\n// Paginnation next :\nconst handleNextPage = (page, totalPage) => {\n  if (page < totalPage) {\n    return page + 1;\n  }\n  return totalPage;\n};\n\n// Paginnation first :\nconst handleFirstPage = () => 1;\n\n// Paginnation last :\nconst handleLastPage = (lastPage) => lastPage;\n","// Import\n\n// Import : Local\nimport { FETCH_PLANT_USER_SUCCESS } from '../actions/userPlantActions';\nimport { REMOVE_PLANT_USER } from '../actions/removePlantAction';\n\n// The State\nconst initialState = {\n  list: [],\n  loading: false,\n  currentPlant: '',\n};\n\nconst plantUserReducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case FETCH_PLANT_USER_SUCCESS:\n      return {\n        ...state,\n        list: [...action.payload.data],\n        loading: false,\n        nbrResultUser: action.payload.info.nbPlant,\n      };\n    case REMOVE_PLANT_USER:\n      return {\n        ...state,\n        currentPlant: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default plantUserReducer;\n","// Import\n\n// Import : Local\nimport { EDIT_PROFIL } from '../actions/profilActions';\n\n// The State\nconst initialState = {\n  onEditInput: false,\n};\n\nconst profilReducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case EDIT_PROFIL:\n      return {\n        ...state,\n        onEditInput: !state.onEditInput,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default profilReducer;\n","// Import : npm\nimport { combineReducers } from 'redux';\n\n// Import : Local\nimport loginReducer from './loginReducer';\nimport plantListApi from './plantListApi';\nimport plantUserReducer from './plantUserReducer';\nimport profilReducer from './profilReducer';\n\n// Centralization of our files \"reducers\" here :\nexport default combineReducers({\n  loginReducer,\n  plantListApi,\n  plantUserReducer,\n  profilReducer,\n});\n","// Import : npm\nimport axios from 'axios';\n\n// Import local : actions\nimport {\n  FETCH_PLANT,\n  fetchPlantSuccess,\n  fetchPlantError,\n} from '../actions/listPlantApiAction';\n\nimport {\n  addPlantSuccess,\n  ADD_PLANT_SUBMIT,\n  resetTxtAddPlant,\n} from '../actions/addPlantAction';\n\nimport { REMOVE_PLANT_USER } from '../actions/removePlantAction';\n\nimport { FETCH_PLANT_USER, fetchPlantUserSuccess, fetchPlantUser } from '../actions/userPlantActions';\n\n// Utils :\nconst baseURI = 'http://54.87.69.37/Projet-green-pocket-back/public/';\n\nexport default (store) => (next) => (action) => {\n  next(action);\n  switch (action.type) {\n    case FETCH_PLANT: {\n      const { token } = store.getState().loginReducer.user;\n      const nbrPage = store.getState().plantListApi.numberPage;\n      axios({\n        method: 'post',\n        url: `${baseURI}api/plantmodel/list`,\n        headers: { Authorization: `Bearer ${token}` },\n        data: {\n          nbPlantPage: 8,\n          numberPage: `${nbrPage}`,\n        },\n      })\n        .then((res) => {\n          const list = res.data;\n          // console.log(list);\n          store.dispatch(fetchPlantSuccess(list));\n        })\n        .catch((err) => {\n          // console.log(err);\n          store.dispatch(fetchPlantError(err));\n        });\n\n      break;\n    }\n    case ADD_PLANT_SUBMIT: {\n      const { token } = store.getState().loginReducer.user;\n      const pseudoPlant = store.getState().plantListApi.pseudoAddPlant;\n      const newIdPlant = store.getState().plantListApi.idPlantCreate;\n      axios({\n        method: 'post',\n        url: `${baseURI}api/plant/user/create`,\n        headers: { Authorization: `Bearer ${token}` },\n        data: {\n          pseudoPlant: `${pseudoPlant}`,\n          plantModel: `${newIdPlant}`,\n        },\n      })\n        .then((res) => {\n          console.log('LA PLANTE EST AJOUTEE!!!');\n          store.dispatch(addPlantSuccess(res.data));\n          setTimeout(() => {\n            store.dispatch(resetTxtAddPlant());\n          }, 4000);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      break;\n    }\n    case FETCH_PLANT_USER: {\n      const { token } = store.getState().loginReducer.user;\n      const nbrPage = store.getState().plantListApi.numberPage;\n      axios({\n        method: 'post',\n        url: `${baseURI}api/plant/user/list`,\n        headers: { Authorization: `Bearer ${token}` },\n        data: {\n          nbPlantPage: 8,\n          numberPage: `${nbrPage}`,\n        },\n      })\n        .then((res) => {\n          console.log('AJAX');\n          console.log(res.data);\n          console.log(res.data.info);\n          store.dispatch(fetchPlantUserSuccess(res.data));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      break;\n    }\n    case REMOVE_PLANT_USER: {\n      const { token } = store.getState().loginReducer.user;\n      const { currentPlant } = store.getState().plantUserReducer;\n      axios({\n        method: 'post',\n        url: `${baseURI}api/plant/user/delete`,\n        headers: { Authorization: `Bearer ${token}` },\n        data: {\n          id: `${currentPlant}`,\n        },\n      })\n        .then((res) => {\n          console.log(res.data);\n          store.dispatch(fetchPlantUser());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      break;\n    }\n    default:\n  }\n};\n","// Import : npm\nimport axios from 'axios';\n\n// Import local : actions\nimport {\n  LOGIN_SUBMIT,\n  loginSuccess,\n  loginError,\n  CHECK_AUTH,\n  REGISTER_FORM_SUBMIT,\n  addUserSuccess,\n  getCurrentUser,\n  addUserErr,\n} from '../actions/loginActions';\n\n// Utils :\nconst baseURI = 'http://54.87.69.37/Projet-green-pocket-back/public/';\n\n// Middleware :\nexport default (store) => (next) => (action) => {\n  next(action);\n  const { dispatch } = store;\n  // request done :\n  switch (action.type) {\n    case LOGIN_SUBMIT: {\n      // dispatch(setLoadingState(true));\n      axios({\n        method: 'post',\n        url: `${baseURI}api/login_check`,\n        withCredentials: true,\n        data: {\n          username: store.getState().loginReducer.user.email,\n          password: store.getState().loginReducer.user.password,\n        },\n      })\n        .then((res) => {\n          // console.log(res.data);\n          localStorage.setItem('token', res.data.token);\n          dispatch(loginSuccess(res.data));\n        })\n        .catch((err) => {\n          // console.log(err);\n          dispatch(loginError(err));\n        })\n        .finally(() => {\n          // dispatch(setLoadingState(false));\n        });\n      break;\n    }\n    case CHECK_AUTH: {\n      // Request reload user\n      const token = localStorage.getItem('token');\n      axios({\n        method: 'get',\n        url: `${baseURI}api/user/verify`,\n        headers: { Authorization: `Bearer ${token}` },\n      })\n        .then((res) => {\n          const { data } = res;\n          dispatch(loginSuccess(data));\n          dispatch(getCurrentUser(data));\n        })\n        .catch((res) => {\n          console.log(res);\n        });\n      break;\n    }\n    case REGISTER_FORM_SUBMIT: {\n      // Request for add new user :\n      const userData = store.getState().loginReducer.user;\n      axios({\n        method: 'post',\n        url: `${baseURI}api/login_register`,\n        data: {\n          email: userData.email,\n          password: userData.password,\n          firstname: userData.firstName,\n          lastname: userData.lastName,\n          pseudoUser: userData.pseudo,\n          dateofbirth: userData.dateofbirth,\n          country: userData.country,\n          citycode: userData.citycode,\n        },\n      })\n        .then((res) => {\n          // console.log(res.data);\n          dispatch(addUserSuccess());\n        })\n        .catch((err) => {\n          console.log(err);\n          dispatch(addUserErr());\n        });\n    }\n      break;\n    default:\n  }\n};\n","// == Import npm\nimport { createStore, compose, applyMiddleware } from 'redux';\n\n// == Import : Local\nimport rootReducer from '../reducers';\nimport ajaxMiddleware from '../middleware/ajaxMiddleware';\nimport loginMiddleware from '../middleware/loginMiddleware';\n\n// == Enhancers\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancers = composeEnhancers(\n  applyMiddleware(\n    loginMiddleware,\n    ajaxMiddleware,\n    // secondMiddleware,\n  ),\n);\n\n// == Store\nconst store = createStore(\n  rootReducer,\n  // preloadedState,\n  enhancers,\n);\n\n// == Export\nexport default store;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './styles/index.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// Pour utiliser \"REDUX\", la dependance est installée, l'import du \"PROVIDER\" est fait, a décommenter puis\n// mettre la balise <Provider store= \"store\"></Provider> dans les espaces prévus.\n// Penser à importer le \"STORE\" une fois créé.\n","module.exports = __webpack_public_path__ + \"static/media/PocketLogo.6ff4a90c.png\";","module.exports = __webpack_public_path__ + \"static/media/GreenPocketLogo.20e1f4b7.png\";","module.exports = __webpack_public_path__ + \"static/media/Calendar.6e755239.png\";"],"sourceRoot":""}